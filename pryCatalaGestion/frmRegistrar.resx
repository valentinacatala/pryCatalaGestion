<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>